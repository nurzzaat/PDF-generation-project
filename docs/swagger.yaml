basePath: /
definitions:
  models.Confirmer:
    properties:
      fullName:
        type: string
      specialist:
        type: string
    type: object
  models.ErrorDetail:
    properties:
      code:
        type: string
      message:
        type: string
      metadata:
        $ref: '#/definitions/models.Properties'
    type: object
  models.ErrorResponse:
    properties:
      errors:
        items:
          $ref: '#/definitions/models.ErrorDetail'
        type: array
    type: object
  models.Header:
    properties:
      specialityName:
        type: string
      subjectName:
        type: string
    type: object
  models.Litrature:
    properties:
      additionalLiterature:
        items:
          type: string
        type: array
      mainLiterature:
        items:
          type: string
        type: array
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.Modules:
    properties:
      moduleName:
        type: string
      topic:
        items:
          $ref: '#/definitions/models.Topic'
        type: array
    type: object
  models.Password:
    properties:
      confirmPassword:
        type: string
      password:
        type: string
    type: object
  models.PrefaceInfo:
    properties:
      confirmedBy:
        $ref: '#/definitions/models.Confirmer'
      discussedBy1:
        $ref: '#/definitions/models.Confirmer'
      discussedBy2:
        $ref: '#/definitions/models.Confirmer'
      discussion1:
        type: string
      discussion2:
        type: string
      madeBy:
        $ref: '#/definitions/models.Confirmer'
    type: object
  models.Properties:
    properties:
      additionalProp1:
        type: string
      additionalProp2:
        type: string
      additionalProp3:
        type: string
    type: object
  models.SuccessResponse:
    properties:
      metadata:
        $ref: '#/definitions/models.Properties'
      result: {}
    type: object
  models.Syllabus:
    properties:
      literature:
        $ref: '#/definitions/models.Litrature'
      mainInfo:
        $ref: '#/definitions/models.SyllabusInfo'
      preface:
        $ref: '#/definitions/models.PrefaceInfo'
      syllabusID:
        type: integer
      topics:
        items:
          $ref: '#/definitions/models.Modules'
        type: array
    type: object
  models.SyllabusInfo:
    properties:
      allHours:
        type: integer
      courseNumber:
        type: integer
      creditNumber:
        type: integer
      facultyName:
        type: string
      kafedraName:
        type: string
      lectureHours:
        type: integer
      practiceLessons:
        type: integer
      sro:
        type: integer
      subjectInfo:
        $ref: '#/definitions/models.Header'
    type: object
  models.Topic:
    properties:
      LK:
        type: integer
      SPZ:
        type: integer
      SRO:
        type: integer
      literature:
        type: string
      topicName:
        type: string
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      password:
        type: string
    type: object
  models.UserRequest:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
    type: object
host: 185.146.1.71
info:
  contact: {}
  description: This is a sample server celler server.
  title: Swagger Example API
  version: "1.0"
paths:
  /forgot-password:
    post:
      parameters:
      - description: Email address
        in: formData
        name: email
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Forgot Password
      tags:
      - auth
  /logout:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: LogOut
      tags:
      - auth
  /signin:
    post:
      consumes:
      - application/json
      parameters:
      - description: login
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: SignIn
      tags:
      - auth
  /signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: SignUp
      tags:
      - auth
  /syllabus:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Syllabus'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Syllabus
    post:
      consumes:
      - application/json
      parameters:
      - description: syllabus
        in: body
        name: syllabus
        required: true
        schema:
          $ref: '#/definitions/models.SyllabusInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Syllabus
  /syllabus/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Syllabus
    get:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Syllabus'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Syllabus
  /syllabus/generate:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Syllabus
  /syllabus/literature/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: syllabus
        in: body
        name: syllabus
        required: true
        schema:
          $ref: '#/definitions/models.Syllabus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Syllabus
  /syllabus/main/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: syllabus
        in: body
        name: syllabus
        required: true
        schema:
          $ref: '#/definitions/models.Syllabus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Syllabus
  /syllabus/others:
    get:
      consumes:
      - application/json
      parameters:
      - description: subject
        in: query
        name: subject
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Syllabus'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Syllabus
  /syllabus/preface/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: syllabus
        in: body
        name: syllabus
        required: true
        schema:
          $ref: '#/definitions/models.Syllabus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Syllabus
  /syllabus/topic/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: syllabus
        in: body
        name: syllabus
        required: true
        schema:
          $ref: '#/definitions/models.Syllabus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Syllabus
  /user/profile:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - User
    put:
      consumes:
      - application/json
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - User
  /user/reset-password:
    post:
      consumes:
      - application/json
      parameters:
      - description: Change password
        in: body
        name: reset
        required: true
        schema:
          $ref: '#/definitions/models.Password'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Reset password
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
